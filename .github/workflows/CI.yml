name: CI

on:
  pull_request:
  push:
    branches: [main]

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v3
    - uses: julia-actions/setup-julia@v1
    - uses: julia-actions/cache@v1
    - uses: julia-actions/julia-buildpkg@v1
    - uses: pre-commit/action@v3.0.0
      with:
        extra_args: ""  # do not run on all files
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        julia-version:
          - "1"
        os:
          - ubuntu-latest
          - windows-latest
          - macOS-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v3
        # with:
        #   lfs: 'true'
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.julia-version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v1
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v3
        with:
          file: lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
  # docs:
  #   name: Documentation
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: julia-actions/setup-julia@v1
  #     - run: |
  #         julia --project=docs -e '
  #           using Pkg
  #           Pkg.develop(PackageSpec(path=pwd()))
  #           Pkg.instantiate()'
  #     - run: |
  #         julia --project=docs -e '
  #           using Documenter: doctest
  #           using Wannier
  #           doctest(Wannier)'
  #     - run: julia --project=docs docs/make.jl
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
